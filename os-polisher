#!/usr/bin/env bash

readonly USER="thynkon"

readonly HOSTNAME_FILE="/etc/hostname"
readonly HOSTNAME="fedora"

readonly FEDORA_VERSION=$(rpm -E %fedora)
readonly CPU_ARCH=$(uname -p)

readonly DNF_CONFIG="/etc/dnf/dnf.conf"
readonly RPM_FUSION="https://download1.rpmfusion.org"
readonly RPM_FUSION_FREE="$RPM_FUSION/free/fedora/rpmfusion-free-release-$FEDORA_VERSION.noarch.rpm"
readonly RPM_FUSION_NONFREE="$RPM_FUSION/nonfree/fedora/rpmfusion-nonfree-release-$FEDORA_VERSION.noarch.rpm"

readonly SOFTWARE_FILE="software"
readonly CODECS_FILE="codecs"
readonly FONTS_FILE="fonts"

readonly MEGA="https://mega.nz"

export readonly GITHUB="https://github.com"
export readonly GITHUB_USERNAME="Thynkon"

echoerr() {
	echo "$@" 1>&2
}

install_packages() {
	packages_list=""

	while IFS= read -r line; do
		packages_list+=$line"  "
	done < "$1"

	dnf install $packages_list
}

install_mega() {
	wget "$MEGA/linux/MEGAsync/Fedora_$FEDORA_VERSION/$CPU_ARCH/megasync-Fedora_$FEDORA_VERSION.$CPU_ARCH.rpm" -P /tmp
	cd /tmp
	dnf install -y "./megasync-Fedora_$FEDORA_VERSION.$CPU_ARCH.rpm"
}

change_hostname() {
	# Change hostname
	if [[ -z $HOSTNAME ]];then
		echoerr "Hostname is null\n"
	fi

	echo $HOSTNAME > $HOSTNAME_FILE
	hostname $HOSTNAME
}

setup_dnf() {
	local typeset -A dnf_options
	dnf_options[fastestmirror]=1
	dnf_options[deltarpm]=1

	for option in "${!dnf_options[@]}"; do
		# Only enable these settings if they aren't already set
		if ! grep -q "$option=${dnf_options[$option]}" $DNF_CONFIG; then
			echo "$option=${dnf_options[$option]}" >> $DNF_CONFIG
		fi
	done
}

setup_dotfiles() {
	# Setup dotfiles
	git clone --bare "git@github.com:$GITHUB_USERNAME/dotfiles.git" "$HOME/dev/dotfiles"

	if [[ $? -eq 1 ]]; then
		echoerr "Failed to clone dotfiles repository!\n"
		echoerr "Check your ssh keys!\n"

		exit 1
	fi

	git --git-dir=$HOME/dev/dotfiles/ --work-tree=$HOME checkout -f
	git --git-dir=$HOME/dev/dotfiles/ --work-tree=$HOME config --local status.showUntrackedFiles no
}
export -f setup_dotfiles

setup_zsh() {
	local ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"

	# Oh-my-zsh
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

	# powerlevel
	git clone $GITHUB/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k

	### Plugins
	# alias-tips
	git clone $GITHUB/djui/alias-tips.git $ZSH_CUSTOM/plugins/alias-tips

	# zsh-completions
	git clone $GITHUB/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions

	# zsh-syntax-highlighting
	git clone $GITHUB/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
}
export -f setup_zsh

setup_vim() {
	# Vundle, vim's plugin manager
	su $USER -c "git clone $GITHUB/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim"

	# Compile YouComleteMe core with semantic support for C-family languages through libclang
	cd ~/.vim/bundle/YouCompleteMe
	python3 install.py --clang-completer
}
export -f setup_vim

setup_neovim() {
	curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
				https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	pip3 install --user pynvim

}
export -f setup_neovim

setup_monitors() {
	cat >> "/etc/sddm/Xsetup" <<- EOM
# Dual monitor setup
xrandr --output DVI-D-0 --mode 1920x1080  --output HDMI-0 --mode 1920x1080 --primary --left-of DVI-D-0
	EOM
}

main() {
	if [ $EUID -ne 0 ]; then
		echo "You must execute this script as root!"
		exit 1
	fi

	setup_dnf

	change_hostname

	# Enable rpmfusion repositories
	dnf install -y $RPM_FUSION_FREE $RPM_FUSION_NONFREE
	dnf update

	# Install software, codecs and fonts
	install_packages $SOFTWARE_FILE
	install_packages $CODECS_FILE
	install_packages $FONTS_FILE
	install_mega
	wget "$GITHUB/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraMono/Regular/complete/Fura%20Mono%20Regular%20Nerd%20Font%20Complete.otf" -P /home/$USER/Downloads

	# Install oh-my-zsh, powerlevel10k and some zsh plugins
	su $USER -c "bash -c setup_zsh"
	setup_zsh

	su $USER -c "bash -c setup_dotfiles"

	if [ -f "/root/.p10k.zsh" ]; then
		rm "/root/.p10k.zsh"
	fi
	ln -s /home/$USER/.p10k.zsh /root/


	if [ -f "/root/.zshrc" ]; then
		rm "/root/.zshrc"
	fi
	ln -s /home/$USER/.zshrc /root/

	su $USER -c "bash -c setup_vim"
	su $USER -c "bash -c setup_neovim"

	setup_monitors
}

main

exit 0
